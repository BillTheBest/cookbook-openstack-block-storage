<%= node["openstack"]["block-storage"]["custom_template_banner"] %>

#############
# Openstack #
#############

[composite:osapi_volume]
use = call:cinder.api.openstack.urlmap:urlmap_factory
/: osvolumeversions
/v1: openstack_volume_api_v1

[composite:openstack_volume_api_v1]
use = call:cinder.api.auth:pipeline_factory
noauth = faultwrap sizelimit noauth osapi_volume_app_v1
keystone = faultwrap sizelimit authtoken keystonecontext osapi_volume_app_v1
keystone_nolimit = faultwrap sizelimit authtoken keystonecontext osapi_volume_app_v1

[filter:faultwrap]
paste.filter_factory = cinder.api.openstack:FaultWrapper.factory

[filter:noauth]
paste.filter_factory = cinder.api.openstack.auth:NoAuthMiddleware.factory

[filter:sizelimit]
paste.filter_factory = cinder.api.sizelimit:RequestBodySizeLimiter.factory

[app:osapi_volume_app_v1]
paste.app_factory = cinder.api.openstack.volume:APIRouter.factory

[pipeline:osvolumeversions]
pipeline = faultwrap osvolumeversionapp

[app:osvolumeversionapp]
paste.app_factory = cinder.api.openstack.volume.versions:Versions.factory

##########
# Shared #
##########

[filter:keystonecontext]
paste.filter_factory = cinder.api.auth:CinderKeystoneContext.factory

[filter:authtoken]
# This needs to change to keystoneclient.middleware.auth_token:filter_factory
# when keystoneclient packages are updated (which contain the middleware, not
# the Keystone server package...)
paste.filter_factory = keystone.middleware.auth_token:filter_factory
auth_host = <%= @identity_admin_endpoint.host %>
auth_port = <%= @identity_admin_endpoint.port %>
auth_protocol = <%= @identity_admin_endpoint.scheme %>
admin_tenant_name = <%= node["openstack"]["block-storage"]["service_tenant_name"] %>
admin_user = <%= node["openstack"]["block-storage"]["service_user"] %>
admin_password = <%= @service_pass %>
<% if node["openstack"]["auth"]["strategy"] == "pki" -%>
signing_dir = <%= node["openstack"]["block-storage"]["api"]["auth"]["cache_dir"] %>
<% end -%>
